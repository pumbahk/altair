[DEFAULT]
www_check_docroot = %(here)s/../var/www-check/altair.cms.admin
sqlalchemy.url = ${altair:cms.db_url.master}
altair.sqlahelper.sessions.slave.url = ${altair:cms.db_url.master}

[app:altaircms]
use = config:%(here)s/../../baseconf/cms-common.ini#altaircms
altaircms.stage = ${altair:altaircms.stage}
pyramid.includes = pyramid_tm pyramid_fanstatic altair.findable_label

altaircms.page.tmp.directory = %(here)s/../tmp
altaircms.asset.storepath = %(here)s/../var/altair/cms/asset
altaircms.s3.utility = ${altair:altaircms.s3.utility}
altaircms.solr.search.utility  = ${altair:altaircms.solr.search.utility}
altaircms.page.static.factoryclass = ${altair:altaircms.page.static.factoryclass}
altaircms.usersite.url  = ${altair:altaircms.usersite.url}
altaircms.backend.url  = ${altair:altaircms.backend.url}
altaircms.logout.external.url  = ${altair:altaircms.logout.external.url}
altair.oauth.authorize_url  = ${altair:altair.oauth.authorize_url}
altair.oauth.access_token_url  = ${altair:altair.oauth.access_token_url}

; Beaker
session.type = ${altair:beaker_backend_type}
session.data_dir = %(here)s/tmp/beaker/data
session.lock_dir = %(here)s/tmp/beaker/lock

cache.type = ${altair:beaker_backend_type}
cache.data_dir = %(here)s/tmp/beaker/data
cache.lock_dir = %(here)s/tmp/beaker/lock

; altair.httpsession
altair.httpsession.persistence = ${altair:httpsession_persistence_backend_type}
altair.httpsession.persistence.type = ${altair:beaker_backend_type}
altair.httpsession.persistence.data_dir = %(here)s/tmp/beaker/data
altair.httpsession.persistence.lock_dir = %(here)s/tmp/beaker/lock

[app:www-check]
use = egg:Paste#static
document_root = %(www_check_docroot)s

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /

[pipeline:pipeline]
pipeline = 
    prefix
    altaircms

[composite:main]
use = egg:Paste#urlmap
/ = pipeline
/.www-check = www-check

[server:main]
use  = egg:gunicorn#main
host = 0.0.0.0
port = %(http_port)s
workers = 1
timeout = 3600
graceful_timeout = 300

[pshell]
setup = altaircms.scripts.pshell.setup

[alembic]
script_location = %(here)s/../../../cms/alembic
# file_template = %%(rev)s_%%(slug)s
sqlalchemy.echo = false

# Begin logging configuration

[loggers]
keys = root, altair, altaircms, sqlalchemy, alembic

[handlers]
keys = console, fluent, sqlalchemy

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, fluent

[logger_altair]
level = DEBUG
handlers = console, fluent
qualname = altair
propagate = 0

[logger_altaircms]
level = INFO
handlers = console, fluent
qualname = altaircms
propagate = 0

[logger_sqlalchemy]
level = INFO
handlers = sqlalchemy
qualname = sqlalchemy.engine
propagate = 0

[logger_alembic]
level = INFO
handlers = console, sqlalchemy
qualname = alembic
propagate = 0

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = ${altair:console_loglevel}
formatter = generic

[handler_sqlalchemy]
class = altair.log.filters.BrowserIdTimedRotatingFileHandler
args = ('%(here)s/../log/altair.cms.admin.sqlalchemy.log', 'D',)
level = INFO
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.cms.admin', '127.0.0.1', 24224)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
