[DEFAULT]
www_check_docroot = %(here)s/../var/www-check/altair.newsletter.admin

sqlalchemy.url = ${altair:newsletter.db_url.master}

[app:newsletter]
use = config:%(here)s/../../baseconf/common.ini#newsletter
pyramid.includes = pyramid_tm pyramid_fanstatic pyramid_mailer

get sqlalchemy.url = sqlalchemy.url

; Beaker
session.type = ${altair:beaker_backend_type}
session.data_dir = %(here)s/../tmp/beaker/data
session.lock_dir = %(here)s/../tmp/beaker/lock

cache.type = ${altair:beaker_backend_type}
cache.data_dir = %(here)s/../tmp/beaker/data
cache.lock_dir = %(here)s/../tmp/beaker/lock

; altair.httpsession
altair.httpsession.persistence = ${altair:httpsession_persistence_backend_type}
altair.httpsession.persistence.type = ${altair:beaker_backend_type}
altair.httpsession.persistence.data_dir = %(here)s/../tmp/beaker/data
altair.httpsession.persistence.lock_dir = %(here)s/../tmp/beaker/lock

[app:www-check]
use = egg:Paste#static
document_root = %(www_check_docroot)s

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /newsletters

[pipeline:pipeline]
pipeline = 
    prefix
    newsletter

[composite:main]
use = egg:Paste#urlmap
/ = pipeline
/.www-check = www-check

[server:main]
use = egg:gunicorn#main
workers = 1
host = 0.0.0.0
port = %(http_port)s
timeout = 3600
graceful_timeout = 3600

# Begin logging configuration

[loggers]
keys = root, newsletter, sqlalchemy

[handlers]
keys = console, fluent, sqlalchemy

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, fluent

[logger_newsletter]
level = DEBUG
handlers = console, fluent
qualname = newsletter
propagate = 0

[logger_sqlalchemy]
level =  INFO
handlers = sqlalchemy
qualname = sqlalchemy.engine
propagate = 0

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = WARN
formatter = generic

[handler_sqlalchemy]
class = altair.log.filters.BrowserIdTimedRotatingFileHandler
args = ('%(here)s/../log/altair.newsletter.admin.sqlalchemy.log', 'D',)
level = INFO
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.newsletter.admin', '127.0.0.1', 24224, 3.0, False, 'utf-8', None, ['environ', 'params', 'session'])
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
