[app:mypage]
use = config:%(here)s/../../baseconf/common.ini#mypage
pyramid.includes = pyramid_tm pyramid_fanstatic pyramid_beaker pyramid_mailer altair_gaq altair.findable_label
pyramid_who.config = %(here)s/mypage_who.ini

; altair:site-data
altair.site_data.base_url = s3://tstar-dev/venue-layouts/frontend/

; altair.rakuten_auth
altair.rakuten_auth.return_to = ${altair:rakuten_auth.return_to}
altair.rakuten_auth.error_to = ${altair:rakuten_auth.error_to}
altair.rakuten_auth.verify_url = ${altair:rakuten_auth.verify_url}
altair.rakuten_auth.extra_verify_url = ${altair:rakuten_auth.extra_verify_url}

; Beaker
session.type = ${altair:beaker_backend_type}
cache.type = ${altair:beaker_backend_type}

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /mypage

[pipeline:main]
pipeline =
   prefix
   mypage

[server:main]
use  = egg:gunicorn#main
host = 0.0.0.0
port = %(http_port)s
workers = 1

# Begin logging configuration

[loggers]
keys = root, ticketing, sqlalchemy

[handlers]
keys = console, fluent, sqlalchemy

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, fluent

[logger_ticketing]
level = DEBUG
handlers = console, fluent
qualname = ticketing
propagate = 0

[logger_sqlalchemy]
level = INFO
handlers = sqlalchemy
qualname = sqlalchemy.engine
propagate = 0

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = ${altair:console_loglevel}
formatter = generic

[handler_sqlalchemy]
class = altair.log.filters.BrowserIdTimedRotatingFileHandler
args = ('%(here)s/../log/altair.ticketing.mypage.sqlalchemy.log', 'D',)
level = INFO
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.ticketing.mypage', '127.0.0.1', 24224)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
