[app:payment]
use = config:%(here)s/../../baseconf/common.ini#payment
pyramid.includes = pyramid_tm pyramid_fanstatic pyramid_mailer altair_gaq altair.findable_label altair.auth altair.queryprofile altair.app.ticketing.cart.dummy
altair.auth.specs =
    rakuten=%(here)s/rakuten_who.ini
    fc_auth=%(here)s/fc_who.ini
altair.auth.decider = altair.app.ticketing.security:OrganizationSettingBasedWhoDecider
altair.auth.callback = altair.app.ticketing.security:auth_model_callback
altair.sej.template_file = %(here)s/../../../ticketing/misc/sej/template.html

; altair:site-data
altair.site_data.base_url = s3://tstar-dev/venue-layouts/frontend/

; altair.mq
altair.ticketing.cart.mq = altair.mq.consumer.pika_client_factory
                           altair.mq.publisher.pika_publisher_factory
altair.ticketing.cart.mq.url = amqp://guest:guest@localhost:5672/%2F

;; altair.mq -- Pika (AMQP) を使わないでローカルで同期的にディスパッチする場合
;altair.ticketing.cart.mq = altair.mq.publisher.locally_dispatching_publisher_consumer_factory
;altair.ticketing.cart.mq.routes = cart:cart

; altair.rakuten_auth
altair.rakuten_auth.return_to = ${altair:rakuten_auth.return_to}
altair.rakuten_auth.error_to = ${altair:rakuten_auth.error_to}
altair.rakuten_auth.verify_url = ${altair:rakuten_auth.verify_url}
altair.rakuten_auth.extra_verify_url = ${altair:rakuten_auth.extra_verify_url}
altair.rakuten_auth.session = ${altair:httpsession_persistence_backend_type}
altair.rakuten_auth.session.type = ${altair:beaker_backend_type}
altair.rakuten_auth.session.data_dir = %(here)s/tmp/beaker/data
altair.rakuten_auth.session.lock_dir = %(here)s/tmp/beaker/lock

; Beaker
session.type = ${altair:beaker_backend_type}
session.data_dir = %(here)s/tmp/beaker/data
session.lock_dir = %(here)s/tmp/beaker/lock

cache.type = ${altair:beaker_backend_type}
cache.data_dir = %(here)s/tmp/beaker/data
cache.lock_dir = %(here)s/tmp/beaker/lock

; altair.httpsession
altair.httpsession.persistence = ${altair:httpsession_persistence_backend_type}
altair.httpsession.persistence.type = ${altair:beaker_backend_type}
altair.httpsession.persistence.data_dir = %(here)s/tmp/beaker/data
altair.httpsession.persistence.lock_dir = %(here)s/tmp/beaker/lock

; altair.queryprofile
altair.queryprofile.summary_path = cart/__queryprofile

[app:www-check]
use = egg:Paste#static
document_root = %(www_check_docroot)s

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /cart

[filter:browserid]
use = egg:altair.browserid#browserid
cookie_name = browserid
env_key = repoze.browserid

[pipeline:pipeline]
pipeline = 
    prefix
    browserid
    payment

[composite:main]
use = egg:Paste#urlmap
/ = pipeline
/.www-check = www-check

[server:main]
use  = egg:gunicorn#main
host = 0.0.0.0
port = %(http_port)s
workers = 1

# Begin logging configuration

[loggers]
keys = root, altair, ticketing, cart, sqlalchemy

[handlers]
keys = console, fluent, sqlalchemy

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, fluent

[logger_altair]
level = DEBUG
handlers = console, fluent
qualname = altair
propagate = 0

[logger_ticketing]
level = DEBUG
handlers = console, fluent
qualname = altair.app.ticketing
propagate = 0

[logger_cart]
level = DEBUG
handlers = console, fluent
qualname = altair.app.ticketing.cart
propagate = 0

[logger_sqlalchemy]
level = INFO
handlers = sqlalchemy
qualname = sqlalchemy.engine
propagate = 0

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = ${altair:console_loglevel}
formatter = generic

[handler_sqlalchemy]
class = altair.log.filters.BrowserIdTimedRotatingFileHandler
args = ('%(here)s/../log/altair.ticketing.cart.sqlalchemy.log', 'D',)
level = INFO
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.ticketing.cart', '127.0.0.1', 24224, 3.0, False, 'utf-8', None, ['environ', 'params', 'session'])
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(hostname)s][%(threadName)s] %(message)s

# End logging configuration
