[DEFAULT]
www_check_docroot = %(here)s/../var/www-check/altair.ticketing.admin
sqlalchemy.url = ${altair:ticketing.db_url.master}
altair.sqlahelper.sessions.slave.url = ${altair:ticketing.db_url.master}
altair.sqlahelper.sessions.slave.session_class = altair.logicaldeleting.LogicalDeletableSession

[app:ticketing]
use = config:%(here)s/../../baseconf/common.ini#ticketing
pyramid.includes = pyramid_tm pyramid_fanstatic pyramid_mailer altair.findable_label altair.queryprofile

;mail
altair.mails.bcc.show_flash_message = false

; fanstatic
fanstatic.minified = false

; Beaker
session.type = ${altair:beaker_backend_type}
session.data_dir = %(here)s/tmp/beaker/data
session.lock_dir = %(here)s/tmp/beaker/lock

cache.type = ${altair:beaker_backend_type}
cache.data_dir = %(here)s/tmp/beaker/data
cache.lock_dir = %(here)s/tmp/beaker/lock

; altair.httpsession
altair.httpsession.persistence = ${altair:httpsession_persistence_backend_type}
altair.httpsession.persistence.type = ${altair:beaker_backend_type}
altair.httpsession.persistence.data_dir = %(here)s/tmp/beaker/data
altair.httpsession.persistence.lock_dir = %(here)s/tmp/beaker/lock

; altair:site-data
altair.site_data.base_url = s3://tstar-dev/venue-layouts/frontend/
altair.queryprofile.summary_path = __queryprofile

; altair.mq
altair.ticketing.lots.mq = altair.mq.consumer.pika_client_factory
                           altair.mq.publisher.pika_publisher_factory
altair.ticketing.lots.mq.url = amqp://guest:guest@localhost:5672/%2F

altair.ticketing.cart.mq = altair.mq.consumer.pika_client_factory
                           altair.mq.publisher.pika_publisher_factory
altair.ticketing.cart.mq.url = amqp://guest:guest@localhost:5672/%2F

;; altair.mq -- Pika (AMQP) を使わないでローカルで同期的にディスパッチする場合
;altair.ticketing.lots.mq = altair.mq.publisher.locally_dispatching_publisher_consumer_factory
;altair.ticketing.lots.mq.routes = lots:lots
;altair.ticketing.cart.mq = altair.mq.publisher.locally_dispatching_publisher_consumer_factory
;altair.ticketing.cart.mq.routes = cart:cart

altair.ticketing.cooperation.augus.bucket = tstar
altair.ticketing.cooperation.augus.tort = cooperation/ftp/augus/upload/test

[app:ticketing_default]
use = ticketing
altair.ticketing.admin.authentication.challenge_view = altair.app.ticketing.views.default_challenge_view

[app:ticketing_client_cert]
use = ticketing
altair.ticketing.admin.authentication.challenge_view = altair.app.ticketing.views.client_cert_challenge_view
altair.site_data.force_indirect_serving = true

[app:main]
use = ticketing

[app:www-check]
use = egg:Paste#static
document_root = %(www_check_docroot)s

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /

[filter:browserid]
use = egg:altair.browserid#browserid
cookie_name = browserid
env_key = repoze.browserid

[pipeline:pipeline_default]
pipeline = 
    prefix
    browserid
    ticketing_default

[pipeline:pipeline_client_cert]
pipeline = 
    prefix
    browserid
    ticketing_client_cert

[composite:default]
use = egg:Paste#urlmap
/ = pipeline_default
/.www-check = www-check

[composite:client_cert]
use = egg:Paste#urlmap
/ = pipeline_client_cert
/.www-check = www-check

[server:main]
use  = egg:gunicorn#main
host = 0.0.0.0
port = %(http_port)s
workers = 1
timeout = 3600
graceful_timeout = 300

[pshell]
setup = altair.app.ticketing.scripts.pshell.setup

[alembic]
script_location = %(here)s/../../../ticketing/alembic
# file_template = %%(rev)s_%%(slug)s
sqlalchemy.echo = false

# Begin logging configuration

[loggers]
keys = root, altair, ticketing, sqlalchemy, alembic

[handlers]
keys = console, fluent, sqlalchemy

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, fluent

[logger_altair]
level = DEBUG
handlers = console, fluent
qualname = altair
propagate = 0

[logger_ticketing]
level = DEBUG
handlers = console, fluent
qualname = altair.app.ticketing
propagate = 0

[logger_sqlalchemy]
level = INFO
handlers = sqlalchemy
qualname = sqlalchemy.engine
propagate = 0

[logger_alembic]
level = INFO
handlers = console, sqlalchemy
qualname = alembic
propagate = 0

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = ${altair:console_loglevel}
formatter = generic

[handler_sqlalchemy]
class = altair.log.filters.BrowserIdTimedRotatingFileHandler
args = ('%(here)s/../log/altair.ticketing.admin.sqlalchemy.log', 'D',)
level = INFO
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.ticketing.admin', '127.0.0.1', 24224)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
