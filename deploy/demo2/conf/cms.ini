[app:altaircms]
use = config:%(here)s/../../baseconf/cms-common.ini#altaircms
sqlalchemy.url = mysql+pymysql://altaircms:altaircms@localhost/altaircms2?charset=utf8
pyramid.includes = pyramid_tm pyramid_fanstatic ticketing.tbview altair.findable_label
altaircms.asset.storepath = %(here)s/data/assets
altaircms.organization.mapping.json = %(here)s/organization.json
altaircms.widget.each_organization.settings =
   altaircms.plugins:ticketstar-widget-settings.ini
   altaircms.plugins:89ers-widget-settings.ini
   altaircms.plugins:nh-widget-settings.ini
   altaircms.plugins:d1-widget-settings.ini
altaircms.usersite.url = http://usersite2.dev.ticketstar.jp/ 
altaircms.layout_directory = altaircms:templates/uploaded/front/layout/

# OAuth
altair.oauth.client_id = fa12a58972626f0597c2faee1454e1
altair.oauth.secret_key = c5f20843c65870fad8550e3ad1f868
altair.oauth.authorize_url = http://backend2.dev.ticketstar.jp/api/authorize
altair.oauth.access_token_url = http://localhost:38021/api/access_token
altaircms.logout.external.url = http://backend2.dev.ticketstar.jp/api/forget_loggedin
altaircms.logout.action = altaircms.auth.api.LogoutWithBackend


altair.findable_label.label = demo

[composite:composite]
use = egg:Paste#urlmap
/ = altaircms

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /

[pipeline:main]
pipeline = 
  prefix
  composite

[server:main]
use = egg:Paste#http
;use = egg:waitress
host = 0.0.0.0
port = %(http_port)s

# begin alembic configuration
[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s
sqlalchemy.echo = true
sqlalchemy.url = %(db_url)s


# end alembic configuration

# Begin logging configuration

[loggers]
keys = root, altaircms, sqlalchemy

[pshell]
setup = scripts.pshell.setup

[handlers]
keys = console, fluent

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console, fluent

[logger_altaircms]
level = DEBUG
handlers = console, fluent
qualname = altaircms
propagate = 0

[logger_sqlalchemy]
level = DEBUG
handlers = console, fluent
qualname = sqlalchemy.engine
propagate = 0
# "level = DEBUG" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = DEBUG
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.cms.admin', '127.0.0.1', 24224)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
