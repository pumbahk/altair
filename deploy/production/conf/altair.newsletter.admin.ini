[DEFAULT]
www_check_docroot = %(here)s/../var/www-check/altair.newsletter.admin

[app:newsletter]
use = config:%(here)s/../../baseconf/common.ini#newsletter
pyramid.includes = pyramid_tm pyramid_fanstatic pyramid_mailer
sqlalchemy.url = mysql://newsletter:newsletter@dbmain.master.altr/newsletter?use_unicode=true&charset=utf8

; Beaker
session.type = redis
cache.type = redis

; altair.httpsession
altair.httpsession.persistence = altair.httpsession.redis.factory
altair.httpsession.persistence.url = kvsmain.master.altr:6379
altair.httpsession.persistence.db = 4
altair.httpsession.persistence.key_modifier = altair.httpsession.redis.compat.beaker_session_key_modifier
; altair.httpsession.persistence.timeout = 900 ; ストレージ側のexpireを有効にしたい場合はコメントアウト

altair.httpsession.http_backend = altair.httpsession.pyramid.cookies
altair.httpsession.http_backend.key = roids
altair.httpsession.http_backend.secret = B7gzHVRUqErB1TFgSeLCHH3Ux6ShtI
altair.httpsession.http_backend.cookie_on_exception = true 

[app:www-check]
use = egg:Paste#static
document_root = %(www_check_docroot)s

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /newsletters

[filter:browserid]
use = egg:altair.browserid#browserid
cookie_name = browserid
env_key = repoze.browserid

[pipeline:pipeline]
pipeline = 
    prefix
    browserid
    newsletter

[composite:main]
use = egg:Paste#urlmap
/ = pipeline
/.www-check = www-check

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = %(http_port)s
workers= %(workers)s
timeout = 600
graceful_timeout = 60
preload_app = true
disable_sendfile = true

# Begin logging configuration

[loggers]
keys = root, altair, newsletter, sqlalchemy

[handlers]
keys = console, fluent, sqlalchemy

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, fluent

[logger_altair]
level = DEBUG
handlers = console, fluent
qualname = altair
propagate = 0

[logger_newsletter]
level = DEBUG
handlers = console, fluent
qualname = newsletter
propagate = 0

[logger_sqlalchemy]
level =  INFO
handlers = sqlalchemy
qualname = sqlalchemy.engine
propagate = 0

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = WARN
formatter = generic

[handler_sqlalchemy]
class = altair.log.filters.BrowserIdTimedRotatingFileHandler
args = ('%(here)s/../log/altair.newsletter.admin.sqlalchemy.log', 'D',)
level = INFO
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.newsletter.admin', '127.0.0.1', 24224, 3.0, False, 'utf-8', None, ['environ', 'params', 'session'])
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
