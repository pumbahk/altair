[buildout]
extends =
    ./versions.cfg

allow-picked-versions = false

parts =
    egg-scripts
    altair-webapps
    altair-pshell-ticketing
    altair-pshell-cms
    s3cmd
    createconf

altair-lib = ../../altairlib
develop = 
    ${buildout:altair-lib}/altair.versiontools
    ../../ticketing
    ../../cms
    ../../newsletter
    ../../commons
    ${buildout:altair-lib}/altair.acquisition
    ${buildout:altair-lib}/altair.auth
    ${buildout:altair-lib}/altair.browserid
    ${buildout:altair-lib}/altair.cartbot
    ${buildout:altair-lib}/altair.cdnpath
    ${buildout:altair-lib}/altair.devproxy
    ${buildout:altair-lib}/altair.encodingfixer
    ${buildout:altair-lib}/altair.exclog
    ${buildout:altair-lib}/altair.findable_label
    ${buildout:altair-lib}/altair.formhelpers
    ${buildout:altair-lib}/altair.gaq
    ${buildout:altair-lib}/altair.grid
    ${buildout:altair-lib}/altair.log
    ${buildout:altair-lib}/altair.logicaldeleting
    ${buildout:altair-lib}/altair.mobile
    ${buildout:altair-lib}/altair.models
    ${buildout:altair-lib}/altair.mq
    ${buildout:altair-lib}/altair.multicheckout
    ${buildout:altair-lib}/altair.now
    ${buildout:altair-lib}/altair.pshell
    ${buildout:altair-lib}/altair.pyramid_assets
    ${buildout:altair-lib}/altair.pyramid_boto
    ${buildout:altair-lib}/altair.pyramid_tz
    ${buildout:altair-lib}/altair.queryprofile
    ${buildout:altair-lib}/altair.rakuten_auth
    ${buildout:altair-lib}/altair.request
    ${buildout:altair-lib}/altair.saannotation
    ${buildout:altair-lib}/altair.sqla
    ${buildout:altair-lib}/altair.sqlahelper
    ${buildout:altair-lib}/altair.viewhelpers
    ${buildout:altair-lib}/altair.preview
    ${buildout:altair-lib}/altair.extracodecs

versions = versions

find-links =
    file:///${buildout:directory}/../../bundle/js.bootstrap_ts-2.3.2dev3-py2.7.egg
    file:///${buildout:directory}/../../bundle/js.jqgrid_ts-4.4.4ts0-py2.7.egg
    http://github.com/moriyoshi/collective.recipe.supervisor/archive/0.20dev-moriyoshi0.zip#egg=collective.recipe.supervisor-0.20dev-moriyoshi0
    http://github.com/moriyoshi/gunicorn/archive/0.17.4moriyoshi3.zip#egg=gunicorn-0.17.4moriyoshi3
    http://github.com/moriyoshi/cns.recipe.symlink/archive/0.2.4moriyoshi0.zip#egg=cns.recipe.symlink-0.2.4moriyoshi0
    http://github.com/moriyoshi/fluent-logger-python/tarball/0.3.3moriyoshi3#egg=fluent-logger-0.3.3moriyoshi3
    http://github.com/moriyoshi/repoze.sendmail/archive/4.1moriyoshi1.zip#egg=repoze.sendmail-4.1moriyoshi1
    http://github.com/moriyoshi/pyramid_mailer/archive/0.13moriyoshi4.zip#egg=pyramid_mailer-0.13moriyoshi4

[altair]
conf_path = ${buildout:directory}/conf

[mkvardirs]
recipe = z3c.recipe.mkdir
paths = 
    var/altair/cms
    var/altair/cms/solr
    var/altair/cms/asset
    var/altair/cms/usersite
    var/altair/cms/usersite/static
    var/altair/cms/usersite/uploaded
    var/altair/ticketing
    var/altair/ticketing/ticket-preview-rpc
    var/altair/newsletter
mode = 0755

[mkextradirs]
recipe = z3c.recipe.mkdir
paths = 
    tmp
    log
mode = 0755

[mksymlinktargets]
recipe = z3c.recipe.mkdir
paths =
    ${deploy:root}/var
    ${deploy:root}/tmp
    ${deploy:root}/log
mode = 0755

[mkdevsymlinks]
recipe = collective.recipe.cmd:py
on_install = true
cmds =
    >>> import os
    >>> import shutil
    >>> buildout_directory = buildout['buildout']['directory']
    >>> baseconf_directory = os.path.join(os.path.dirname(buildout_directory), 'baseconf')
    >>> def mksymlink(src, dst):
    ...     try:
    ...         os.unlink(dst)
    ...     except:
    ...         try:
    ...             shutil.rmtree(dst)
    ...         except:
    ...             pass
    ...     os.symlink(src, dst)
    >>> for toplevel_dir in ['var', 'tmp', 'log']:
    ...     mksymlink(os.path.join(buildout_directory, toplevel_dir),
    ...               os.path.join(baseconf_directory, toplevel_dir))


[mktoplevelsymlinks]
recipe = collective.recipe.cmd:py
on_install = true
cmds =
    >>> import os
    >>> import shutil
    >>> deploy_root = buildout['deploy']['root']
    >>> buildout_directory = buildout['buildout']['directory']
    >>> baseconf_directory = os.path.join(os.path.dirname(buildout_directory), 'baseconf')
    >>> def mksymlink(src, dst):
    ...     try:
    ...         os.unlink(dst)
    ...     except:
    ...         pass
    ...     os.symlink(src, dst)
    >>> for toplevel_dir in ['var', 'tmp', 'log']:
    ...     mksymlink(os.path.join(deploy_root, toplevel_dir),
    ...               os.path.join(buildout_directory, toplevel_dir))
    ...     mksymlink(os.path.join(deploy_root, toplevel_dir),
    ...               os.path.join(baseconf_directory, toplevel_dir))

[mksymlinks]
recipe = collective.recipe.cmd:py
on_install = true
cmds =
    >>> import os
    >>> import shutil
    >>> def mksymlink(src, dst):
    ...     try:
    ...         os.unlink(dst)
    ...     except:
    ...         pass
    ...     os.symlink(src, dst)
    >>> def rmtree_or_symlink(target):
    ...     if os.path.islink(target):
    ...         os.unlink(target)
    ...     else:
    ...         shutil.rmtree(target)
    >>> deploy_root = buildout['deploy']['root']
    >>> buildout_directory = buildout['buildout']['directory']
    >>> project_root = os.path.dirname(os.path.dirname(buildout_directory))
    >>> cms_data_dir = os.path.join(deploy_root, 'var', 'altair', 'cms')
    >>> altaircms_dir = os.path.join(project_root, 'cms', 'src', 'altaircms')
    >>> uploaded_dir = os.path.join(altaircms_dir, 'static', 'uploaded')
    >>> layout_dir = os.path.join(altaircms_dir, 'templates', 'front', 'layout')
    >>> cms_data_layout_dir = os.path.join(cms_data_dir, 'cms-layout-templates')
    >>> if os.path.exists(uploaded_dir):
    ...     rmtree_or_symlink(uploaded_dir)
    >>> mksymlink(os.path.join(cms_data_dir, 'usersite', 'uploaded'), uploaded_dir)
    >>> mksymlink(layout_dir, cms_data_layout_dir)

uninstall_cmds =
    >>> import os
    >>> import shutil
    >>> deploy_root = buildout['deploy']['root']
    >>> buildout_directory = buildout['buildout']['directory']
    >>> project_root = os.path.dirname(os.path.dirname(buildout_directory))
    >>> cms_data_dir = os.path.join(deploy_root, 'var', 'altair', 'cms')
    >>> altaircms_dir = os.path.join(project_root, 'cms', 'src', 'altaircms')
    >>> uploaded_dir = os.path.join(altaircms_dir, 'static', 'uploaded')
    >>> layout_dir = os.path.join(altaircms_dir, 'templates', 'front', 'layout')
    >>> for toplevel_dir in ['var', 'tmp', 'log']:
    ...     try:
    ...         unlink(s.path.join(buildout_directory, toplevel_dir))
    ...     except:
    ...         pass
    >>> try:
    ...     unlink(uploaded_dir)
    ... except:
    ...     pass
    >>> try:
    ...     unlink(layout_dir)
    ... except:
    ...     pass

[createconf]
recipe = z3c.recipe.filetemplate
files =
    conf/cancel_auth_expired_carts.conf
    conf/update_seat_status.conf
    conf/send_sales_reports.conf
    conf/send_lots_reports.conf
    conf/rakuten_checkout_sales.conf

[altair]
ticketing.db_url.master = mysql+pymysql://ticketing:ticketing@127.0.0.1/ticketing?use_unicode=true&charset=utf8
cms.db_url.master = mysql+pymysql://altaircms:altaircms@127.0.0.1/altaircms?use_unicode=true&charset=utf8
cms.solr.port = 8082
eggs = 
    altair.app.ticketing
    altair_cms
    altair_newsletter
    pyramid
    gunicorn
    altair.acquisition
    altair.auth
    altair.browserid
    altair.cartbot
    altair.cdnpath
    altair.devproxy
    altair.encodingfixer
    altair.exclog
    altair.findable_label
    altair.formhelpers
    altair_gaq
    altair.grid
    altair.log
    altair.logicaldeleting
    altair.mobile
    altair.models
    altair.mq
    altair.multicheckout
    altair.now
    altair_pshell
    altair.pyramid_assets
    altair.pyramid_boto
    altair.pyramid_tz
    altair.queryprofile
    altair.rakuten_auth
    altair.request
    altair.saannotation
    altair.sqla
    altair.sqlahelper
    altair.versiontools
    altair.viewhelpers
    altair.preview
    altair.extracodecs

[altair-webapps]
recipe = zc.recipe.egg
eggs = ${altair:eggs}

[s3cmd]
recipe = zc.recipe.egg
eggs = 
    s3cmd
scripts =
    s3cmd
initialization = 
    import pkg_resources
    pkg_resources.get_provider('S3').run_script('s3cmd', globals())
; THIS ENTRY POINT IS JUST A DUMMY.
entry-points =
    s3cmd=S3:main

[egg-scripts]
recipe = zc.recipe.egg:scripts
eggs =
    ${altair:eggs}
    alembic
scripts =
    pmain
    alembic
    mserve
interpreter = altairpy

[altair-pshell-ticketing]
recipe = zc.recipe.egg:scripts
eggs =
    ${altair:eggs}
    bpython
scripts = altair_pshell_ticketing
entry-points =
    altair_pshell_ticketing=altair.pshell.main:main
arguments = sys.argv[0:1] + ['${buildout:directory}/conf/altair.ticketing.admin.ini', '-p', 'bpython'] + sys.argv[1:]

[altair-pshell-cms]
recipe = zc.recipe.egg:scripts
eggs =
    ${altair:eggs}
    bpython
scripts = altair_pshell_cms
entry-points =
    altair_pshell_cms=altair.pshell.main:main
arguments = sys.argv[0:1] + ['${buildout:directory}/conf/altair.cms.admin.ini', '-p', 'bpython'] + sys.argv[1:]

[solr-download]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
url = http://ftp.kddilabs.jp/infosystems/apache/lucene/solr/4.4.0/solr-4.4.0.zip

[solr]
recipe = collective.recipe.solrinstance
solr-location = ${solr-download:location}
host = 0.0.0.0
port = ${altair:cms.solr.port}
max-num-results = 500
section-name = SOLRo

extra-field-types =
    <fieldType name="text_cjk" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.CJKTokenizerFactory"/>
      </analyzer>
    </fieldType>

index =
    name:id                type:string   indexed:true stored:true required:true
    name:df                type:string   
    name:searchtext        type:text_cjk indexed:true multivalued:true stored:false
    name:page_id           type:int      indexed:true
    name:pageset_id        type:int      indexed:true
    name:page_title        type:text_cjk indexed:true copyfield:searchtext
    name:page_description  type:text_cjk indexed:true copyfield:searchtext
    name:page_tag          type:text_cjk indexed:true multivalued:true copyfield:searchtext
    name:page_keywords     type:text_cjk indexed:true multivalued:true copyfield:searchtext
    name:event_title       type:text_cjk indexed:true stored:true copyfield:searchtext
    name:event_subtitle    type:text_cjk indexed:true copyfield:searchtext
    name:event_performer   type:text_cjk indexed:true multivalued:true copyfield:searchtext
    name:event_description type:text_cjk indexed:true multivalued:true copyfield:searchtext
    name:performance_venue type:text_cjk indexed:true multivalued:true copyfield:searchtext                           


unique-key = id

filter =
    text solr.LowerCaseFilterFactory

default-search-field = searchtext
default-operator = and

[supervisor]
recipe = collective.recipe.supervisor
logfile = ${buildout:directory}/log/supervisord.log
childlogdir = ${buildout:directory}/log
programs = 
plugins = mr.laforge
rpcplugins =
    laforge mr.laforge.rpcinterface:make_laforge_rpcinterface
ctlplugins =
    laforge mr.laforge.controllerplugin:make_laforge_controllerplugin

[cancel_auth]
recipe = z3c.recipe.usercrontab
times = */10 * * * *
command = ${buildout:directory}/bin/cancel_auth_expired_carts ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/cancel_auth_expired_carts.conf

[sej_notification]
recipe = z3c.recipe.usercrontab
times = */10 * * * *
command = ${buildout:directory}/bin/sej_notification ${altair:conf_path}/altair.ticketing.sej.ini 

[update_seat_status]
recipe = z3c.recipe.usercrontab
times = */5 * * * *
command = ${buildout:directory}/bin/update_seat_status ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/update_seat_status.conf

[send_sales_reports]
recipe = z3c.recipe.usercrontab
times = 5 * * * *
command = ${buildout:directory}/bin/send_sales_reports ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/send_sales_reports.conf

[send_lots_reports]
recipe = z3c.recipe.usercrontab
times = 5 * * * *
command = ${buildout:directory}/bin/send_lots_reports ${altair:conf_path}/send_lots_reports.conf

[rakuten_checkout_sales]
recipe = z3c.recipe.usercrontab
times = */15 * * * *
command = ${buildout:directory}/bin/rakuten_checkout_sales ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/rakuten_checkout_sales.conf

[multicheckout_cancel_auth]
recipe = z3c.recipe.usercrontab
times = 0 * * * *
command = ${buildout:directory}/bin/cancel_auth ${altair:conf_path}/altair.ticketing.admin.ini 

[refund_order]
recipe = z3c.recipe.usercrontab
times = 0 1 * * *
command = ${buildout:directory}/bin/refund_order ${altair:conf_path}/altair.ticketing.admin.ini

[detect_fraud]
recipe = z3c.recipe.usercrontab
times = 55 * * * *
command = ${buildout:directory}/bin/detect_fraud ${altair:conf_path}/altair.ticketing.admin.ini

[s3sync_usersite_asset]
recipe = z3c.recipe.usercrontab
times = */15 * * * *
command = ${buildout:directory}/bin/s3cmd sync -P -F s3://${altair:s3.bucket}/asset ${buildout:directory}/var/altair/cms/ 2>&1 | logger -t "s3cmd[usersite_asset]" -p local0.info

[s3sync_usersite_usersite]
recipe = z3c.recipe.usercrontab
times = */15 * * * *
command = ${buildout:directory}/bin/s3cmd sync -P -F s3://${altair:s3.bucket}/usersite ${buildout:directory}/var/altair/cms/ 2>&1 | logger -t "s3cmd[usersite_usersite]" -p local0.info

[s3sync_usersite_templates]
recipe = z3c.recipe.usercrontab
times = */15 * * * *
command = ${buildout:directory}/bin/s3cmd sync -F s3://${altair:s3.bucket}/cms-layout-templates ${buildout:directory}/var/altair/cms/ 2>&1 | logger -t "s3cmd[usersite_cms-layout-templates]" -p local0.info

[s3sync_cmsadmin_asset]
recipe = z3c.recipe.usercrontab
times = 2,17,32,47 * * * *
command = ${buildout:directory}/bin/s3cmd sync -P -F ${buildout:directory}/var/altair/cms/usersite ${buildout:directory}/var/altair/cms/cms-layout-templates s3://${altair:s3.bucket}/ 2>&1 | logger -t "s3cmd[cmsadmin_asset]" -p local0.info

[s3sync_cmsadmin_usersite]
recipe = z3c.recipe.usercrontab
times = 2,17,32,47 * * * *
command = ${buildout:directory}/bin/s3cmd sync -F ${buildout:directory}/var/altair/cms/usersite s3://${altair:s3.bucket}/ 2>&1 | logger -t "s3cmd[cmsadmin_usersite]" -p local0.info

[s3sync_cmsadmin_templates]
recipe = z3c.recipe.usercrontab
times = 2,17,32,47 * * * *
command = ${buildout:directory}/bin/s3cmd sync -F ${buildout:directory}/var/altair/cms/cms-layout-templates s3://${altair:s3.bucket}/ 2>&1 | logger -t "s3cmd[cmsadmin_templates]" -p local0.info

[s3sync_cmsadmin_asset]
recipe = z3c.recipe.usercrontab
times = 2,17,32,47 * * * *
command = ${buildout:directory}/bin/s3cmd sync -P -F ${buildout:directory}/var/altair/cms/asset s3://${altair:s3.bucket}/ 2>&1 | logger -t "s3cmd[cmsadmin_asset]" -p local0.info

[s3sync_cmsadmin_asset_rev]
recipe = z3c.recipe.usercrontab
times = */15 * * * *
command = ${buildout:directory}/bin/s3cmd sync -P -F s3://${altair:s3.bucket}/asset ${buildout:directory}/var/altair/cms/ 2>&1 | logger -t "s3cmd[cmsadmin_asset_rev]" -p local0.info
