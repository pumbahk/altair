[buildout]
extends =
    ./versions.cfg

allow-picked-versions = false

parts =
    altairticketing
    egg-scripts
    pmain
    s3cmd
    createconf

develop = 
    ../../altair_versiontools
    ../../ticketing
    ../../cms
    ../../newsletter
    ../../commons
    ../../altair_gaq
    ../../altair_findable_label
    ../../altair_log
    ../../altair_browserid
    ../../altair_auth
    ../../altair_sqla
    ../../altair_exclog
    ../../altair_now
    ../../altair_encodingfixer
    ../../altair_logicaldeleting
    ../../altair_mq
    ../../altair_pyramid_assets
    ../../altair_pyramid_boto
    ../../altair_pyramid_tz
    ../../altair_mobile
    ../../altair_cdnpath
    ../../altair_rakuten_auth
    ../../altair_grid
    ../../altair_saannotation

versions = versions

find-links =
    file:///${buildout:directory}/../../bundle/js.bootstrap_ts-2.3.2.dev1-py2.7.egg
    http://github.com/moriyoshi/collective.recipe.supervisor/archive/0.20dev-moriyoshi0.zip#egg=collective.recipe.supervisor-0.20dev-moriyoshi0
    http://github.com/moriyoshi/gunicorn/archive/0.17.4moriyoshi1.zip#egg=gunicorn-0.17.4moriyoshi1
    http://github.com/moriyoshi/cns.recipe.symlink/archive/0.2.4moriyoshi0.zip#egg=cns.recipe.symlink-0.2.4moriyoshi0

[altair]
conf_path = ${buildout:directory}/conf

[mkvardirs]
recipe = z3c.recipe.mkdir
paths = 
    var/altair/cms
    var/altair/cms/asset
    var/altair/cms/usersite
    var/altair/cms/usersite/static
    var/altair/cms/usersite/uploaded
    var/altair/ticketing
    var/altair/newsletter
mode = 0755

[mkextradirs]
recipe = z3c.recipe.mkdir
paths = 
    tmp
    log
mode = 0755

[mksymlinktargets]
recipe = z3c.recipe.mkdir
paths =
    ${deploy:root}/var
    ${deploy:root}/tmp
    ${deploy:root}/log
mode = 0755

[mksymlinks]
recipe = collective.recipe.cmd:py
on_install = true
cmds =
    >>> import os
    >>> import shutil
    >>> def mksymlink(src, dst):
    ...     try:
    ...         os.unlink(dst)
    ...     except:
    ...         pass
    ...     os.symlink(src, dst)
    >>> def rmtree_or_symlink(target):
    ...     if os.path.islink(target):
    ...         os.unlink(target)
    ...     else:
    ...         shutil.rmtree(target)
    >>> deploy_root = buildout['deploy']['root']
    >>> buildout_directory = buildout['buildout']['directory']
    >>> project_root = os.path.dirname(os.path.dirname(buildout_directory))
    >>> cms_data_dir = os.path.join(deploy_root, 'var', 'altair', 'cms')
    >>> altaircms_dir = os.path.join(project_root, 'cms', 'src', 'altaircms')
    >>> uploaded_dir = os.path.join(altaircms_dir, 'static', 'uploaded')
    >>> layout_dir = os.path.join(altaircms_dir, 'templates', 'front', 'layout')
    >>> cms_data_layout_dir = os.path.join(cms_data_dir, 'cms-layout-templates')
    >>> for toplevel_dir in ['var', 'tmp', 'log']:
    ...     mksymlink(os.path.join(deploy_root, toplevel_dir),
    ...               os.path.join(buildout_directory, toplevel_dir))
    >>> rmtree_or_symlink(uploaded_dir)
    >>> if not os.path.islink(layout_dir) and not os.path.exists(cms_data_layout_dir):
    ...     shutil.move(layout_dir, cms_data_layout_dir)
    ... else:
    ...     if not os.path.exists(cms_data_layout_dir):
    ...         os.makedirs(cms_data_layout_dir)
    ...     rmtree_or_symlink(layout_dir)
    >>> mksymlink(os.path.join(cms_data_dir, 'usersite', 'uploaded'), uploaded_dir)
    >>> mksymlink(cms_data_layout_dir, layout_dir)

uninstall_cmds =
    >>> import os
    >>> import shutil
    >>> deploy_root = buildout['deploy']['root']
    >>> buildout_directory = buildout['buildout']['directory']
    >>> project_root = os.path.dirname(os.path.dirname(buildout_directory))
    >>> cms_data_dir = os.path.join(deploy_root, 'var', 'altair', 'cms')
    >>> altaircms_dir = os.path.join(project_root, 'cms', 'src', 'altaircms')
    >>> uploaded_dir = os.path.join(altaircms_dir, 'static', 'uploaded')
    >>> layout_dir = os.path.join(altaircms_dir, 'templates', 'front', 'layout')
    >>> for toplevel_dir in ['var', 'tmp', 'log']:
    ...     try:
    ...         unlink(s.path.join(buildout_directory, toplevel_dir))
    ...     except:
    ...         pass
    >>> try:
    ...     unlink(uploaded_dir)
    ... except:
    ...     pass
    >>> try:
    ...     unlink(layout_dir)
    ... except:
    ...     pass

[createconf]
recipe = z3c.recipe.filetemplate
files =
    conf/cancel_auth_expired_carts.conf
    conf/update_seat_status.conf
    conf/send_sales_reports.conf
    conf/rakuten_checkout_sales.conf

[altairticketing]
recipe = zc.recipe.egg
eggs = 
    ticketing
    altair_cms
    altair_newsletter
    pyramid
    altair_gaq
    altair.findable_label
    altair.log
    altair.browserid
    altair-commons
    altair.auth
    altair.encodingfixer
    altair.logicaldeleting
    altair.rakuten_auth
    altair.grid
    altair.mq
interpreter = altairpy

[pmain]
recipe = zc.recipe.egg
eggs = 
    ${altairticketing:eggs}
    altair-commons
scripts =
    pmain

[s3cmd]
recipe = zc.recipe.egg
eggs = 
    s3cmd
scripts =
    s3cmd
initialization = 
    import pkg_resources
    pkg_resources.get_provider('S3').run_script('s3cmd', globals())
; THIS ENTRY POINT IS JUST A DUMMY.
entry-points =
    s3cmd=S3:main

[egg-scripts]
recipe = zc.recipe.egg:scripts
eggs = 
    alembic
    ticketing
    altair_cms
    altair_newsletter
    gunicorn
scripts =
    alembic
    gunicorn_paster

[supervisor]
recipe = collective.recipe.supervisor
logfile = ${buildout:directory}/log/supervisord.log
childlogdir = ${buildout:directory}/log
programs = 
plugins = mr.laforge
rpcplugins =
    laforge mr.laforge.rpcinterface:make_laforge_rpcinterface
ctlplugins =
    laforge mr.laforge.controllerplugin:make_laforge_controllerplugin

[cancel_auth]
recipe = z3c.recipe.usercrontab
times = */10 * * * *
command = ${buildout:directory}/bin/cancel_auth_expired_carts ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/cancel_auth_expired_carts.conf

[sej_notification]
recipe = z3c.recipe.usercrontab
times = */10 * * * *
command = ${buildout:directory}/bin/sej_notification ${altair:conf_path}/altair.ticketing.sej.ini 

[update_seat_status]
recipe = z3c.recipe.usercrontab
times = */5 * * * *
command = ${buildout:directory}/bin/update_seat_status ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/update_seat_status.conf

[send_sales_reports]
recipe = z3c.recipe.usercrontab
times = 5 * * * *
command = ${buildout:directory}/bin/send_sales_reports ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/send_sales_reports.conf

[rakuten_checkout_sales]
recipe = z3c.recipe.usercrontab
times = */15 * * * *
command = ${buildout:directory}/bin/rakuten_checkout_sales ${altair:conf_path}/altair.ticketing.admin.ini ${altair:conf_path}/rakuten_checkout_sales.conf

[multicheckout_cancel_auth]
recipe = z3c.recipe.usercrontab
times = 0 * * * *
command = ${buildout:directory}/bin/cancel_auth ${altair:conf_path}/altair.ticketing.admin.ini 

[refund_order]
recipe = z3c.recipe.usercrontab
times = 0 1 * * *
command = ${buildout:directory}/bin/refund_order ${altair:conf_path}/altair.ticketing.admin.ini

[s3sync_usersite]
recipe = z3c.recipe.usercrontab
times = */5 * * * *
command = ${buildout:directory}/bin/s3cmd sync s3://${altair:s3.bucket}/asset s3://${altair:s3.bucket}/usersite s3://${altair:s3.bucket}/cms-layout-templates ${buildout:directory}/var/altair/cms/

[s3sync_cmsadmin]
recipe = z3c.recipe.usercrontab
times = 2,7,12,17,22,27,32,37,42,47,52,57 * * * *
command = ${buildout:directory}/bin/s3cmd sync ${buildout:directory}/var/altair/cms/usersite ${buildout:directory}/var/altair/cms/cms-layout-templates s3://${altair:s3.bucket}/

[s3sync_cmsadmin2]
recipe = z3c.recipe.usercrontab
times = */5 * * * *
command = ${buildout:directory}/bin/s3cmd sync s3://${altair:s3.bucket}/asset ${buildout:directory}/var/altair/cms/
