[app:checkinstation]
use = config:%(here)s/../../baseconf/common.ini#checkinstation
sqlalchemy.url = mysql+pymysql://ticketing:ticketing@dbmain.master.altr:3306/ticketing?use_unicode=true&charset=utf8

pyramid.reload_templates = false
ticketing.testing =

; certificate
; altair.checkinstation.client.certificate.identifier = /C=JP/ST=Tokyo/L=Shinagawa/OU=Dev/O=Ticketstar,inc./CN=admin@ticketstar.jp

; altair:site-data
altair.site_data.base_url = s3://tstar/venue-layouts/frontend/
altair.site_data.frontend_base_url = s3://tstar/venue-layouts/frontend/
altair.site_data.backend_base_url = s3://tstar/venue-layouts/backend/

; Beaker
session.type = redis
session.url = kvsmain.master.altr:6379
session.db = 5
session.key = mykey
session.secret = mysecret
session.cookie_on_exception = true

cache.type = redis
cache.url = kvsmain.master.altr:6379?db=1
cache.db = 1
cache.altair.rakuten_auth.openid.metadata.expire = 1800

; altair.httpsession
altair.httpsession.persistence = altair.httpsession.redis.factory
altair.httpsession.persistence.url = kvsmain.master.altr:6379
altair.httpsession.persistence.db = 5
altair.httpsession.persistence.key_modifier = altair.httpsession.redis.compat.beaker_session_key_modifier
altair.httpsession.persistence.timeout = 86400 ; ストレージ側のexpireを有効にしたい場合はコメントアウト

altair.httpsession.http_backend = altair.httpsession.pyramid.cookies
altair.httpsession.http_backend.key = mykey
altair.httpsession.http_backend.secret = mysecret
altair.httpsession.http_backend.cookie_on_exception = true 

; Orion
orion.create_url = https://app-qa.eventgate.jp/ticket_api/create
orion.search_url = https://app-qa.eventgate.jp/ticket_api/search

; s3
s3.access_key = AKIAJPTLSMEERXZCO4NQ
s3.secret_key = 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
s3.bucket_name = tstar
s3.static.exclude.function = altair.app.ticketing:exclude_js

[app:www-check]
use = egg:Paste#static
document_root = %(www_check_docroot)s

[filter:prefix]
use = egg:PasteDeploy#prefix
prefix = /checkinstation

[filter:browserid]
use = egg:altair.browserid#browserid
cookie_name = browserid
env_key = repoze.browserid

[pipeline:pipeline]
pipeline = 
  prefix
  browserid
  checkinstation

[composite:main]
use = egg:Paste#urlmap
/ = pipeline
/.www-check = www-check

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = %(http_port)s
workers = %(workers)s
timeout = 600
graceful_timeout = 60
preload_app = true
disable_sendfile = true

# Begin logging configuration

[loggers]
keys = root, altair, ticketing, checkinstation, sqlalchemy

[handlers]
keys = console, fluent, sqlalchemy

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console, fluent

[logger_altair]
level = DEBUG
handlers = console, fluent
qualname = altair
propagate = 0

[logger_ticketing]
level = DEBUG
handlers = console, fluent
qualname = altair.app.ticketing
propagate = 0

[logger_checkinstation]
level = DEBUG
handlers = console, fluent
qualname = altair.app.ticketing.printqr
propagate = 0

[logger_sqlalchemy]
level = INFO
handlers = fluent
qualname = sqlalchemy.engine
propagate = 0

[handler_sqlalchemy]
class = altair.log.filters.BrowserIdTimedRotatingFileHandler
args = ('%(here)s/../log/altair.ticketing.checkinstation.sqlalchemy.log', 'D',)
level = INFO
formatter = generic

[handler_console]
class = altair.log.filters.BrowserIdStreamHandler
args = (sys.stderr,)
level = WARN
formatter = generic

[handler_fluent]
class = altair.log.filters.BrowserIdFluentHandler
args = ('altair.ticketing.checkinstation', '127.0.0.1', 24224, 3.0, False, 'utf-8', None, ['environ', 'params', 'session'])
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(browserid)s %(url)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
