[app:altaircms]
use = config:../../baseconf/cms.ini#altaircms
altaircms.asset.storepath = %(here)s/data/assets
altaircms.organization.mapping.json = %(here)s/organization.json
altair.oauth.authorize_url = http://backend.dev.ticketstar.jp/api/authorize
altaircms.logout.external.url = http://backend.dev.ticketstar.jp/api/forget_loggedin
altaircms.logout.action = altaircms.auth.api.LogoutWithBackend

[composite:main]
use = egg:Paste#urlmap
/ = altaircms

[server:main]
use = egg:Paste#http
;use = egg:waitress
host = 0.0.0.0
port = %(http_port)s

# begin alembic configuration
[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s
sqlalchemy.echo = true
sqlalchemy.url = %(db_url)s


# end alembic configuration

# Begin logging configuration

[loggers]
keys = root, altaircms, sqlalchemy

[pshell]
setup = scripts.pshell.setup

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_altaircms]
level = INFO
# level = DEBUG
handlers =
qualname = altaircms

[logger_sqlalchemy]
level = CRITICAL
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
