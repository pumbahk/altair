Booster リグレッションテスト
=============================

自動テストのための前提
--------------------------------

- 決済方法は窓口を使う
- 引取方法も窓口を使う


設定
----------------------

>>> from altair.app.ticketing.booster.89ers import main
>>> from altair.app.ticketing.booster.89ers import testing
>>> from datetime import datetime, timedelta
>>> now = datetime.now()
>>> oneday = timedelta(days=1)
>>> yesterday = now - oneday
>>> tommorow = now + oneday
>>> dbfile = testing.tmp_dbfile()

>>> settings = {
...     '89ers.organization_id':         "1",
...     '89ers.event_id':                "1",
...     '89ers.performance_id':          "1",
...     '89ers.start_at':                format(yesterday, '%Y-%m-%d %H:%M:%S'),
...     '89ers.end_at':                  format(tommorow, '%Y-%m-%d %H:%M:%S'),
...     'altair.cart.domain.mapping':    "{}",
...     'sqlalchemy.url':                'sqlite:///{0}'.format(dbfile),
...     'sqlalchemy.echo':               False,
...     'mako.directories':              'altair.app.ticketing.booster.89ers:templates',
... }


>>> from altair.app.ticketing.booster.89ers import testing
>>> app = testing.BoosterTestApp(settings)
>>> testing.setup()

テストデータ
-----------------------------

Site

>>> site = testing.t_data(
...     'altair.app.ticketing.core.models.Site',
...    )

Organization

>>> organization = testing.t_data(
...     'altair.app.ticketing.core.models.Organization', 
...     name=u'仙台89ers', 
...     code='89', 
...     short_name='89ers',
...     )

Event

>>> event = testing.t_data('altair.app.ticketing.core.models.Event', organization=organization)

Performance

>>> performance = testing.t_data('altair.app.ticketing.core.models.Performance', event=event)

Venue

>>> venue = testing.t_data('altair.app.ticketing.core.models.Venue', site=site, organization=organization, performance=performance)

SalesSegment

>>> sales_segment = testing.t_data('altair.app.ticketing.core.models.SalesSegment', event=event)

PaymentMethod

DeliveryMethod

PaymentDeliveryMethodPair

StockType

>>> stock_type1 = testing.t_data('altair.app.ticketing.core.models.StockType', event=event)
>>> stock_type2 = testing.t_data('altair.app.ticketing.core.models.StockType', event=event)
>>> stock_type3 = testing.t_data('altair.app.ticketing.core.models.StockType', event=event)

Stock

>>> stock1 = testing.t_data('altair.app.ticketing.core.models.Stock', stock_type=stock_type1, performance=performance, quantity=9999999999999999)
>>> stock_status1 = testing.t_data('altair.app.ticketing.core.models.StockStatus', stock=stock1, quantity=stock1.quantity)
>>> stock2 = testing.t_data('altair.app.ticketing.core.models.Stock', stock_type=stock_type2, performance=performance, quantity=9999999999999999)
>>> stock_status2 = testing.t_data('altair.app.ticketing.core.models.StockStatus', stock=stock2, quantity=stock2.quantity)
>>> stock3 = testing.t_data('altair.app.ticketing.core.models.Stock', stock_type=stock_type3, performance=performance, quantity=9999999999999999)
>>> stock_status3 = testing.t_data('altair.app.ticketing.core.models.StockStatus', stock=stock3, quantity=stock3.quantity)

Product

>>> product1 = testing.t_data('altair.app.ticketing.core.models.Product', name=u'商品１', event=event, price=3000, sales_segment=sales_segment)
>>> product2 = testing.t_data('altair.app.ticketing.core.models.Product', name=u'商品２', event=event, price=2000, sales_segment=sales_segment)
>>> product3 = testing.t_data('altair.app.ticketing.core.models.Product', name=u'商品３', event=event, price=1000, sales_segment=sales_segment)

ProductItem

>>> product_item1 = testing.t_data('altair.app.ticketing.core.models.ProductItem', product=product1, price=product1.price, stock=stock1)
>>> product_item2 = testing.t_data('altair.app.ticketing.core.models.ProductItem', product=product2, price=product2.price, stock=stock2)
>>> product_item3 = testing.t_data('altair.app.ticketing.core.models.ProductItem', product=product3, price=product3.price, stock=stock3)
>>> performance.product_items = [product_item1, product_item2, product_item3]

>>> testing.flush()
>>> import transaction
>>> transaction.commit()

購入画面 :class:`ticketing.booster.89ers.views.IndexView`
--------------------------------------------------------------

>>> res = app.get('/')
>>> len(res.form.fields)
25
>>> res.form.fields.keys()
[u'cont', u'old_id_number', u'member_type', u't_shirts_size', u'last_name', u'first_name', u'last_name_kana', u'first_name_kana', u'year', u'month', u'day', u'sex', u'zipcode1', u'zipcode2', u'prefecture', u'city', u'address1', u'address2', u'tel_1', u'tel_2', u'email_1', u'email_1_confirm', u'mail_permission', u'publicity', None]
>>> res.form['cont'] = 'no'
>>> res.form['old_id_number'] = ''
>>> res.form['member_type'].options
[('', False), (u'1', False), (u'2', False), (u'3', False)]
>>> res.form['member_type'] = '1'
>>> res.form['t_shirts_size'] = 'L'
>>> res.form['last_name'] = 'ああああ'
>>> res.form['first_name'] = 'いいいい'
>>> res.form['last_name_kana'] = 'アアアア'
>>> res.form['first_name_kana'] = 'イイイイ'
>>> res.form['year'] = '1980'
>>> res.form['month'].options
[(u'1', False), (u'2', False), (u'3', False), (u'4', False), (u'5', False), (u'6', False), (u'7', False), (u'8', False), (u'9', False), (u'10', False), (u'11', False), (u'12', False)]
>>> res.form['month'] = u'1'
>>> res.form['day'].options
[(u'1', False), (u'2', False), (u'3', False), (u'4', False), (u'5', False), (u'6', False), (u'7', False), (u'8', False), (u'9', False), (u'10', False), (u'11', False), (u'12', False), (u'13', False), (u'14', False), (u'15', False), (u'16', False), (u'17', False), (u'18', False), (u'19', False), (u'20', False), (u'21', False), (u'22', False), (u'23', False), (u'24', False), (u'25', False), (u'26', False), (u'27', False), (u'28', False), (u'29', False), (u'30', False), (u'31', False)]
>>> res.form['day'] = u'1'
>>> res.form['sex'].options
[(u'male', False), (u'female', False)]
>>> res.form['sex'] = 'male'
>>> res.form['zipcode1'] = '123'
>>> res.form['zipcode2'] = '4567'
>>> res.form['prefecture'] = res.form['prefecture'].options[13][0]
>>> res.form['city'] = '渋谷区'
>>> res.form['address1'] = '代々木１－２－９'
>>> res.form['address2'] = '森京ビル２'
>>> res.form['tel_1'] = '0362761430'
>>> res.form['tel_2'] = ''
>>> res.form['email_1'] = 'aodag@beproud.jp'
>>> res.form['email_1_confirm'] = 'aodag@beproud.jp'


>>> res = res.form.submit()
>>> res.location
'http://localhost/payment/sales/1'


決済選択画面 :class:`ticketing.booster.89ers.views.PaymentView`
--------------------------------------------------------------

>>> res = res.follow()
>>> 

確認画面
--------------------------------------------------------------------

完了画面 :class:`ticketing.booster.89ers.views.CompleteView`
--------------------------------------------------------------------

申し込み確認 :class:`ticketing.booster.89ers.views.OrderReviewView`
--------------------------------------------------------------------------


3Dセキュアフロー
--------------------------

- 購入画面
- 決済方法選択画面
- カード情報入力画面
- 3Dセキュア認証画面（外部）
- 3Dセキュアコールバック オーソリAPI呼び出し
- 確認画面
- 完了画面 売り上げ確定API呼び出し

